function OnBind(self)
	local attr = self:GetAttribute()
	attr.top = 0
end

--DeptUser
function UpdateUser(self)
	local attr = self:GetAttribute()
	local name = self:GetControlObject("user.name")
	name:SetText(attr.userName)
end

function OnUserClick(self)
	--self:SetSrcColor("RGBA(255,255,204,255)")
	local bkg = self:GetObject("user.bkg")
	bkg:SetSrcColor("RGBA(255,255,153,255)")
end

function OnUserHover(self)
	local bkg = self:GetObject("user.bkg")
	bkg:SetSrcColor("RGBA(255,255,204,255)")
end

function OnUserLeave(self)
	local bkg = self:GetObject("user.bkg")
	bkg:SetSrcColor("RGBA(255,255,255,255)")
end

--DeptGroup
function UpdateDept(self)
	local attr = self:GetAttribute()
	local status = self:GetControlObject("dept.status")
	local name = self:GetControlObject("dept.name")
	local users = self:GetObject("dept.users")
	
	name:SetText(attr.deptName)
	
	if attr.expand == true then
		status:SetResID("userlist.expand")
		attr.height = 30+attr.usersHeight
	else
		status:SetResID("userlist.collapse")
		attr.height = 30
	end	

	local newTop = 0
	local uItemHeight = 70
	
	if attr.expand == true then 
		for k,userItem in pairs(attr.allUserItem) do
			userItem:SetObjPos(0,newTop,"father.width", newTop + uItemHeight)
			newTop = newTop + uItemHeight
			users:AddChild(userItem)
		end
	end
	
	local left,top,right,bottom = self:GetObjPos()
	if attr.index > 1 then
		local deptUserList = self:GetParent():GetParent()
		local listAttr = deptUserList:GetAttribute()
		local lastItem = listAttr.allDeptItem[attr.index-1]
		local a,b,c,d = lastItem:GetObjPos()
		top = d
	end

	self:SetObjPos(left,top,"father.width",top + 30 + newTop)
	
	self:GetOwnerControl():UpdateScroll()
end

function CreateDeptList(self,deptsData)
	if deptsData == nil then
		return
	end
	
	local attr = self:GetAttribute()
	local newTop = 0
	local height = 30
	local idx = 1
end

function CreateDept(self,deptData)
	if deptData == nil then
		return
	end

	local attr = self:GetAttribute()
	local newTop = 0
	local height = 30
	local idx = 1
	
	if attr.allDeptItem == nil then
		attr.allDeptItem = {}
		attr.allDeptItemIndexer = {}
	else
		idx = table.getn(attr.allDeptItem)
		newTop = newTop + height
		idx = idx+1
	end
	
	local x,y,width,bottom = self:GetObjPos()
	
	
	local objFactory = XLGetObject("Xunlei.UIEngine.ObjectFactory")
	
	local newDeptItem = objFactory:CreateUIObject("deptUserList.deptItem."..deptData.deptId,"XiaoP.DeptUserList.DeptItem")
	
	local deptItemAttr = newDeptItem:GetAttribute()	
	deptItemAttr.deptId = deptData.deptId
	deptItemAttr.deptName = deptData.deptName
	deptItemAttr.index = idx
	deptItemAttr.expand = deptData.expand
	deptItemAttr.usersHeight = 70 * table.getn(deptData.users)
	--users
	deptItemAttr.allUserItem = {}
	deptItemAttr.allUserItemIndexer = {}
	
	for k,v in pairs(deptData.users) do
	
		local newUserItem = objFactory:CreateUIObject("deptUserList.userItem."..v.userId,"XiaoP.DeptUserList.UserItem")		
		local userItemAttr = newUserItem:GetAttribute()
				
		userItemAttr.index = k
		userItemAttr.userId = v.userId
		userItemAttr.userName = v.userName
			
		newUserItem:UpdateUser()
				
		deptItemAttr.allUserItem[k] = newUserItem	
		deptItemAttr.allUserItemIndexer[v.userId] = newUserItem	
	end			

	attr.allDeptItem[idx] = newDeptItem
	attr.allDeptItemIndexer[deptData.deptId] = newDeptItem	

	newDeptItem:SetObjPos(0,newTop,"father.width",newTop+height)
	self:GetObject("bkg"):AddChild(newDeptItem)	

	newDeptItem:UpdateDept()	

end

function ToggleDept(dept)
	local gStatus = dept:GetObject("dept.status")
	local deptItem = dept:GetFather()
	local gSubs = deptItem:GetObject("dept.users")
	
	local attr = deptItem:GetAttribute()
	local left,top,right,bottom = deptItem:GetObjPos()
	
	
	attr.expand = not attr.expand
	
	if attr.expand == true then
		gStatus:SetResID("userlist.expand")
		attr.height = 30+attr.usersHeight
	else 
		gStatus:SetResID("userlist.collapse")
		attr.height = 30
	end	
	
	for k,userItem in pairs(attr.allUserItem) do
		userItem:SetVisible(attr.expand)
		userItem:SetChildrenVisible(attr.expand)		
	end	
	
	local ownControl = deptItem:GetOwnerControl()
	local listAttr = ownControl:GetAttribute()
	--local l,t,r,b = ownControl:GetObject("bkg")
	
	local total = table.getn(listAttr.allDeptItem)
	if attr.index < total then 
		for i=attr.index+1,total do
			local thisDept = listAttr.allDeptItem[i]
			local a,b,c,d = thisDept:GetObjPos()
			if attr.expand == true then
				thisDept:SetObjPos(a,b+attr.usersHeight,"father.width",d+attr.usersHeight)
			else
				thisDept:SetObjPos(a,b-attr.usersHeight,"father.width",d-attr.usersHeight)
				--[[
				if i == total then
					XLMessageBox(""..(d-attr.usersHeight).."|"..(b-t).."|"..((b-t) - (d-attr.usersHeight)))
					listAttr.top = listAttr.top + (b-t) - (d-attr.usersHeight)
					ownControl:SetListPos()
				end]]
			end
		end
	end
	
	deptItem:GetOwnerControl():UpdateScroll()
end

function OnDeptClick(self)
	ToggleDept(self)
end

function OnDeptHover(self)
	self:SetSrcColor("RGBA(255,255,204,255)")
end

function OnDeptLeave(self)
	self:SetSrcColor("RGBA(255,255,255,255)")
end

--DeptGroupUserList
function CreateDeptUserList(self)
	local attr=self:GetAttribute()
	local nowTop = 0
	local allGroup = attr.allGroups
	if allGroup == nil then
		return
	end
	
	attr.allGroupItem = {}
	attr.alluseritemIndexer = {}
	local alluseritem = attr.alluseritem
	--local objFactory = XLGetObject("Xunlei.UIEngine.ObjectFactory")
end

function OnMouseWheel(self, x, y, distance)
	self:GetOwnerControl():MouseWheel(distance)
end

function OnUserMouseWheel(self, x, y, distance)	
	self:GetOwnerControl():GetOwnerControl():MouseWheel(distance)
end	

function SetListPos(self)
	
	local attr = self:GetAttribute()
	local top1 = attr.top
	local bkg = self:GetControlObject("bkg")
	local left,top,right,bottom = bkg:GetObjPos()
	local cnt = bkg:GetChildCount()-1
	
	--XLMessageBox(""..top1)
	for i=0,cnt do
		local item = bkg:GetChildByIndex(i)
		local itemAttr = item:GetAttribute()
		item:SetObjPos(0, top1, "father.width",top1+itemAttr.height)
		top1 = top1 + itemAttr.height
	end
	
end

function MouseWheel(self, distance)

	local bkg = self:GetControlObject("bkg")
	local left,top,right,bottom = bkg:GetObjPos()
	local height = bottom - top
	local attr = self:GetAttribute()
	local top1 = attr.top
	if distance > 0 then
		top1 = top1 + 70
	elseif distance < 0 then
		top1 = top1 - 70
	end
	
	
	local cnt = bkg:GetChildCount()
	local range = 0
	for i=0,cnt-1 do
		local item = bkg:GetChildByIndex(i)		
		local itemAttr = item:GetAttribute()
		range = range + itemAttr.height
	end	
	
	if height - (range + top1) < 0 then
		attr.top = top1
	else
		attr.top = height - (range + top1) + attr.top - 70		
	end
	if attr.top > 0 then attr.top = 0 end
	self:SetListPos()
	local vscroll = self:GetControlObject("scrollCtrl")
	vscroll:SetScrollPos(-attr.top, true)
end

function UpdateScroll(self)
	local bkg = self:GetControlObject("bkg")

	local left,top,right,bottom = bkg:GetObjPos()
	local height = bottom - top
	
	
	local vscroll = self:GetControlObject("scrollCtrl")
	vscroll:SetPageSize(height)
	
	local cnt = bkg:GetChildCount()
	local range = 0
	for i=0,bkg:GetChildCount()-1 do
		local item = bkg:GetChildByIndex(i)
		
		local itemAttr = item:GetAttribute()
		range = range + itemAttr.height
	end
	range = range - height
	
	if range < 0 then
		vscroll:SetVisible(false)
		vscroll:SetChildrenVisible(false)
		range = 0
	else
		vscroll:SetVisible(true)
		vscroll:SetChildrenVisible(true)
	end
	
	--修复调整大小后的scrollbar位置及list位置
	local attr = self:GetAttribute()
	if -attr.top > range then
		attr.top = - range
		self:SetListPos()
	end
	
	vscroll:SetScrollRange(0, range)
	vscroll:SetScrollPos(-attr.top, true)
end


--		点击纵向进度条的上箭头			self	“OnVScroll”	1	0
--		点击纵向进度条的下箭头			self	“OnVScroll”	2	0
--		点击纵向进度条的非滑块位置		self	“OnVScroll”	3	OnLButtonDown的y值
--		拖动纵向进度条的滑块				self	“OnVScroll”	4	onMouseMove的y值
function OnVScroll(scrollBar, eventName, ntype, newpos)
	local owner = scrollBar:GetOwnerControl()
	local attr = owner:GetAttribute()
	--XLMessageBox("face"..ntype)
	--if type == 4 then
		attr.top = -newpos
		
		owner:SetListPos()
	--end
end

function OnScrollBarMouseWheel(self,func,x,y,distance)
	self:GetOwnerControl():MouseWheel(distance)
end

--[[
function UpdateUI(self)
	local attr = self:GetAttribute()
	
	local name = self:GetControlObject("name")
	local bkg = self:GetControlObject("bkg")
	local face = self:GetControlObject("face")


	name:SetText(attr.username)

	if attr.select then
		bkg:SetSrcColor("userlist.select")	
	else 
		bkg:SetSrcColor("RGBA(255,255,255,255)")
	end
	
	
	local appFactory = XLGetObject("XiaoP.Wnds.App.Factory")
	local appClass = appFactory:CreateInstance()

	
	local img = appClass:GetFace(attr.userid)
	face:SetBitmap(img)
	

end

function OnListMouseWheel(self,x,y,distance,flags)
	local attr = self:GetAttribute()
	local total = table.getn(attr.alluseritem)
		
	local scrollpos = 0
	for i=1,total,1 do
		local left,top,right,bottom = attr.alluseritem[i]:GetObjPos()
		local newtop = top+distance
		
		if i==1 then
			if top <= 0 and newtop >0 then
				newtop = 0
			elseif top < 0 and newtop < (0-(total-5)*70) then
				newtop = 0-(total-5)*70
			end
	
			distance = newtop-top
			scrollpos = 0 - newtop/70
		end



		bottom = bottom + distance
		attr.alluseritem[i]:SetObjPos(left,newtop,right,bottom)
	end

	local scrollctrl = self:GetFather():GetObject("scrollctrl")
	scrollctrl:SetScrollPos(scrollpos)
end

function OnUserItemDbClick(self)

	local user = {}
	user.userid =  "yangting"
	OnOpenChatWnd(user)
end

function OnOpenChatWnd(user)
	local XARManager = XLGetObject("Xunlei.UIEngine.XARManager")
	local loaded = XARManager:IsXARLoaded("Chat")
	if not loaded then
		loaded = XARManager:LoadXAR("Chat")
	end
	
	--XLMessageBox(""..loaded)
	if loaded then
		local hostwndManager = XLGetObject("Xunlei.UIEngine.HostWndManager")
		local hostWnd = hostwndManager:GetHostWnd("ChatFrame" .. user.userid)
		
		if not hostWnd then
			local templateMananger = XLGetObject("Xunlei.UIEngine.TemplateManager")
			local frameHostWndTemplate = templateMananger:GetTemplate("XiaoP.Chat.Wnd","HostWndTemplate")
			if frameHostWndTemplate then  
				local frameHostWnd = frameHostWndTemplate:CreateInstance("ChatFrame" .. user.userid)
				if frameHostWnd then
					local objectTreeTemplate = templateMananger:GetTemplate("XiaoP.Chat.Tree","ObjectTreeTemplate")
					if objectTreeTemplate then
						local uiObjectTree = objectTreeTemplate:CreateInstance("ChatObjectTree" .. user.userid)
						if uiObjectTree then
							frameHostWnd:BindUIObjectTree(uiObjectTree)
							frameHostWnd:SetUserData(user.userid)
							frameHostWnd:Create()
						end
					end
				end
			end
		end
	end	
end]]
